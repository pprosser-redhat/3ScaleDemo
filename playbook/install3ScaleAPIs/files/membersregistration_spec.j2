openapi: 3.0.3
info:
    title: Customer Management API
    version: 1.0.0
    description: This API allows you to manage customers in the Saas Service
    contact:
        name: Phil Prosser
        url: 'https://www.redhat.com'
        email: pprosser@redhat.com
    license:
        name: Apache 2.0
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
    -
        url: 'http://membersdemov1-membersapp.{{ wildcarddomain }}'
        description: Version 1
paths:
    '/{version}/membersweb/rest/members':
        get:
            tags:
                - list
            parameters:
                -
                    examples:
                        v1:
                            value: v1
                        v2:
                            value: v2
                    name: version
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: OK
            security:
                -
                    apikey: []
            operationId: listAllMembers
            summary: list all members
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Member'
            tags:
                - Customer Maintenance
            responses:
                '200':
                    description: OK
            security:
                -
                    apikey: []
            operationId: createMember
            summary: Create new member
        parameters:
            -
                examples:
                    v1:
                        value: v1
                    v2:
                        value: v2
                name: version
                schema:
                    type: string
                in: path
                required: true
    '/{version}/membersweb/rest/members/hello':
        get:
            tags:
                - test
            parameters:
                -
                    examples:
                        v1:
                            value: v1
                        v2:
                            value: v2
                    name: version
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: OK
            security:
                -
                    apikey: []
            operationId: hello
            summary: Say Hello!
        parameters:
            -
                examples:
                    v1:
                        value: v1
                    v2:
                        value: v2
                name: version
                schema:
                    type: string
                in: path
                required: true
    '/{version}/membersweb/rest/members/{email}':
        delete:
            tags:
                - Customer Maintenance
            parameters:
                -
                    name: email
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    examples:
                        v1:
                            value: v1
                        v2:
                            value: v2
                    name: version
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: OK
            security:
                -
                    apikey: []
            operationId: deleteMember
            summary: Delete a member
        parameters:
            -
                name: email
                schema:
                    type: string
                in: path
                required: true
            -
                examples:
                    v1:
                        value: v1
                    v2:
                        value: v2
                name: version
                schema:
                    type: string
                in: path
                required: true
    '/{version}/membersweb/rest/members/{id}':
        get:
            tags:
                - list
            parameters:
                -
                    name: id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: version
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Member'
                    description: OK
            security:
                -
                    apikey: []
            operationId: lookupMemberById
            summary: List Member by Member ID
        parameters:
            -
                name: id
                schema:
                    format: int64
                    type: integer
                in: path
                required: true
            -
                name: version
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        Member:
            required:
                - email
                - phoneNumber
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                firstName:
                    maxLength: 25
                    minLength: 1
                    type: string
                lastName:
                    maxLength: 25
                    minLength: 1
                    type: string
                listNames:
                    $ref: '#/components/schemas/StringJoiner'
                email:
                    nullable: false
                    type: string
                phoneNumber:
                    nullable: false
                    maxLength: 12
                    minLength: 10
                    pattern: '^\d{1,12}$'
                    type: string
        StringJoiner:
            type: object
            properties:
                prefix:
                    type: string
                delimiter:
                    type: string
                suffix:
                    type: string
                elts:
                    type: array
                    items:
                        type: string
                size:
                    format: int32
                    type: integer
                len:
                    format: int32
                    type: integer
                emptyValue:
                    type: string
    securitySchemes:
        apikey:
            type: apiKey
            description: Authentication required to use the customer API
            name: user-key
            in: header
tags:
    -
        name: Customer Maintenance
        description: Customer Management
    -
        name: list
        description: Query Members
    -
        name: test
        description: Test the API