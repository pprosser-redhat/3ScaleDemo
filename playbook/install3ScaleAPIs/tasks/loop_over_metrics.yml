---
# Define Rate limit per plan per metric
- name: Define rate limits for each non Restricted Applications Plan
  uri:
    validate_certs: no
    method: POST
    url: "https://{{ api_tenant }}-admin.{{ wildcarddomain }}/admin/api/application_plans/{{ appplan.json.application_plan.id }}/metrics/{{ item.metric.id }}/limits.json"
    status_code: 201,422
    body_format: form-urlencoded
    body:
      access_token: "{{ tenanttoken }}"
      period: "minute"
      value: "40"
  loop: "{{ metrics_list.json.metrics }}"
  loop_control:
    extended: yes
  ignore_errors: yes
# Don't create rate limiting for v1, v2, or hits
  when: ((item.metric.friendly_name != "v1") and (item.metric.friendly_name != "v2") and (item.metric.friendly_name != "Hits")) and (appplan.json.application_plan.name.find("Bronze") != -1)

- name: Define rate limits for each Restricted Applications Plan
  uri:
    validate_certs: no
    method: POST
    url: "https://{{ api_tenant }}-admin.{{ wildcarddomain }}/admin/api/application_plans/{{ appplan.json.application_plan.id }}/metrics/{{ item.metric.id }}/limits.json"
    status_code: 201,422
    body_format: form-urlencoded
    body:
      access_token: "{{ tenanttoken }}"
      period: "minute"
      value: "10"
  loop: "{{ metrics_list.json.metrics }}"
  loop_control:
    extended: yes
  ignore_errors: yes
# Don't create rate limiting for v1, v2, or hits
  when: ((item.metric.friendly_name != "v1") and (item.metric.friendly_name != "v2") and (item.metric.friendly_name != "Hits")) and (appplan.json.application_plan.name.find("Restricted") != -1 )

# Define Pricing rules per metric for non restricted plans 
- name: Define rate limits for each non Restricted Applications Plan
  uri:
    validate_certs: no
    method: POST
    url: "https://{{ api_tenant }}-admin.{{ wildcarddomain }}/admin/api/application_plans/{{ appplan.json.application_plan.id }}/metrics/{{ item.metric.id }}/pricing_rules.json"
    status_code: 201,422
    body_format: form-urlencoded
    body:
      access_token: "{{ tenanttoken }}"
      cost_per_unit: "0.025"
  loop: "{{ metrics_list.json.metrics }}"
  loop_control:
    extended: yes
  ignore_errors: yes
# Don't create rate limiting for v1, v2, or hits
  when: ((item.metric.friendly_name != "v1") and (item.metric.friendly_name != "v2") and (item.metric.friendly_name != "Hits")) and (appplan.json.application_plan.name.find("Bronze") != -1)
